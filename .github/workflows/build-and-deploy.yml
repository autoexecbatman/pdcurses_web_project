name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write  # Need write access to push to gh-pages branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
          cd ..
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev fonts-dejavu
          
      - name: Clone PDCurses
        run: |
          git clone https://github.com/autoexecbatman/pdcurses_web_project.git pdcurses
          # If the repository doesn't have the expected structure, fall back to original
          if [ ! -d pdcurses/sdl2 ] || [ ! -d pdcurses/pdcurses ]; then
            echo "Repository structure not as expected, falling back to original PDCurses"
            rm -rf pdcurses
            git clone https://github.com/wmcbrine/PDCurses.git pdcurses
          fi
          
      - name: Set up assets directory
        run: |
          mkdir -p assets
          cp /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf assets/ || echo "Default font not found, using system font"
          if [ ! -f assets/DejaVuSansMono.ttf ]; then
            find /usr/share/fonts -name "*.ttf" | head -1 | xargs -I{} cp {} assets/DejaVuSansMono.ttf
          fi
          
      - name: Fix main.c
        run: |
          sed -i '/^\/\//s/^\/\///' main.c
          
      - name: Build WASM
        run: |
          source emsdk/emsdk_env.sh
          emcc -O2 -Wall -Ipdcurses main.c $(find pdcurses/sdl2 -name "*.c") $(find pdcurses/pdcurses -name "*.c") \
          -o hello_pdcurses.html \
          -s WASM=1 -s USE_SDL=2 -s USE_SDL_TTF=2 -s ALLOW_MEMORY_GROWTH=1 \
          -s EXPORTED_RUNTIME_METHODS='["cwrap"]' \
          --preload-file assets \
          -s ASYNCIFY=1 \
          -s ASSERTIONS=1 \
          -s SAFE_HEAP=1 \
          -s ERROR_ON_UNDEFINED_SYMBOLS=0 \
          -s EXPORTED_FUNCTIONS='["_main", "_malloc"]' \
          --shell-file shell.html
          
      - name: Prepare for deployment
        run: |
          # Create a deployment directory
          mkdir -p _deploy
          
          # Copy files to deployment directory
          cp hello_pdcurses.html _deploy/index.html
          cp hello_pdcurses.js _deploy/
          cp hello_pdcurses.wasm _deploy/
          cp hello_pdcurses.data _deploy/
          
          # Verify the files
          ls -la _deploy/
          
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _deploy